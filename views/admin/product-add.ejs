<%- include("../../views/partials/admin/header") %>
<style>
body {
    font-family: 'Poppins', sans-serif;
    background: url('/images/SHOES/background.jpg') no-repeat center center fixed;
    background-size: cover;
    color: #fff;
    margin: 0;
    padding: 0;
    display: flex;
}

.content-main {
    margin-left: 290px;
    width: calc(100% - 290px);
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
}

.content-header {
    text-align: center;
    margin-bottom: 60px;
    width: 100%;
    max-width: 1200px;
}

.content-title {
    color: #fff;
    font-size: 24px;
    font-weight: bold;
}

.content {
    width: 1200px;
    max-width: 100%;
    margin: 0 auto;
}

.card {
    width: 1200px;
    max-width: 100%;
    background: rgba(0, 0, 0, 0.9);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
    margin-bottom: 30px;
}

.form-label {
    color: #fff;
    font-weight: 500;
    margin-bottom: 8px;
    display: block;
}

.form-control, .form-select {
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: #fff;
    padding: 10px;
    border-radius: 5px;
    width: 100%;
    margin-bottom: 10px;
}

.form-control:focus, .form-select:focus {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
    outline: none;
}

.form-select option {
    background: #333;
    color: #fff;
}

.mb-4 {
    margin-bottom: 1.5rem;
}

.row {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 20px;
}

.col-lg-4 {
    flex: 1;
    min-width: 250px;
}

.btn {
    padding: 12px 24px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    transition: 0.3s;
}

.btn-success {
    background: #28a745;
    color: white;
}

.btn-success:hover {
    background: #218838;
}

.btn-danger {
    background: #dc3545;
    color: white;
}

.btn-danger:hover {
    background: #c82333;
}

.btn-primary {
    background: #0d6efd;
    color: white;
}

.btn-primary:hover {
    background: #0b5ed7;
}

.error-message {
    color: #ff4444;
    font-size: 0.875rem;
    margin-top: 4px;
    display: none;
}

.image-upload-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin-bottom: 20px;
}

.image-upload-box {
    background: rgba(255, 255, 255, 0.05);
    padding: 15px;
    border-radius: 5px;
    border: 2px dashed rgba(255, 255, 255, 0.2);
}

.preview-container {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
    margin-bottom: 10px;
    background-color: #222;
}

.img-preview {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
    border-radius: 5px;
}

.thumbnails-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    padding: 15px;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 5px;
    margin-top: 20px;
}

.thumbnail {
    position: relative;
    width: 80px;
    height: 80px;
}

.thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 4px;
}

.remove-icon {
    position: absolute;
    top: -8px;
    right: -8px;
    background: red;
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 14px;
}

@media (max-width: 1500px) {
    .content, .card {
        width: 1000px;
    }
}

@media (max-width: 1300px) {
    .content, .card {
        width: 800px;
    }
}

@media (max-width: 1100px) {
    .content, .card {
        width: 600px;
    }
}
</style>

<div class="content-main">
    <section class="content">
        <div class="content-header">
            <h2 class="content-title">Add New Product</h2>
        </div>

        <div class="card">
            <div class="card-body">
                <form method="post" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()">
                    <!-- Basic Product Information -->
                    <div class="mb-4">
                        <label for="product_name" class="form-label">Product Name</label>
                        <input type="text" placeholder="Enter product name" name="productName" class="form-control" id="product_name">
                        <div id="productName-error" class="error-message"></div>
                    </div>

                    <div class="col-lg-4 mb-4">
                        <label class="form-label">Brand</label>
                        <select class="form-select" name="brand">
                            <%for(let i=0;i<brand.length;i++){%>
                            <option value="<%=brand[i].BrandName%>">
                                <%=brand[i].BrandName%>
                            </option>
                            <%}%>
                        </select>
                        <div id="brand-error" class="error-message"></div>
                    </div>

                    <div class="mb-4">
                        <label class="form-label">Full Description</label>
                        <textarea placeholder="Enter product description" id="descriptionid" name="description" class="form-control" rows="4"></textarea>
                        <div id="description-error" class="error-message"></div>
                    </div>

                    <!-- Pricing -->
                    <div class="row">
                        <div class="col-lg-4 mb-4">
                            <label class="form-label">Regular Price</label>
                            <input placeholder="$" name="regularPrice" type="text" class="form-control">
                            <div id="regularPrice-error" class="error-message"></div>
                        </div>

                        <div class="col-lg-4 mb-4">
                            <label class="form-label">Sale Price</label>
                            <input placeholder="$" name="salePrice" type="text" class="form-control">
                            <div id="salePrice-error" class="error-message"></div>
                        </div>
                    </div>

                    <!-- Color -->
                    <div class="col-lg-4 mb-4">
                        <label class="form-label">Colour</label>
                        <input name="colour" type="text" class="form-control">
                        <div id="color-error" class="error-message"></div>
                    </div>

                    <!-- Size Variants -->
                    <div id="variant-container" class="card mb-4">
                        <div class="card-header">
                            <h4>Product Variants</h4>
                        </div>
                        <div class="card-body">
                            <div class="variant mb-4">
                                <label for="size" class="form-label">Size:</label>
                                <input type="number" name="variants[0][size]" class="form-control border" required>
                                <div id="size-error" class="error-message"></div>

                                <label for="quantity" class="form-label">Quantity:</label>
                                <input type="number" name="variants[0][quantity]" class="form-control border" value="1" required>
                                <div id="quantity-error" class="error-message"></div>

                                <br>
                                <button type="button" class="btn btn-danger mt-2" onclick="removeVariant(this)">Remove Variant</button>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="button" class="btn btn-primary" onclick="addVariant()">Add Another Variant</button>
                        </div>
                    </div>

                    <!-- Category -->
                    <div class="card mb-4">
                        <div class="card-body">
                            <label class="form-label">Category</label>
                            <select class="form-select" style="width: 150px;" name="category">
                                <%for(let i=0;i<cat.length;i++){%>
                                <option value="<%=cat[i].Name%>">
                                    <%=cat[i].Name%>
                                </option>
                                <%}%>
                            </select>
                            <div id="category-error" class="error-message"></div>
                        </div>
                    </div>

                    <!-- Image Upload Section -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Product Images</h4>
                            <small class="text-muted">Upload up to 3 images. First image will be the main product image.</small>
                            <br><br>
                        </div>
                        <div class="card-body">
                            <div class="image-upload-container">
                                <!-- Image Upload Box 1 -->
                                <div class="image-upload-box">
                                    <div class="preview-container">
                                        <img src="" alt="" id="imgView1" class="img-preview">
                                    </div>
                                    <input class="form-control" type="file" name="images" id="input1"
                                        accept="image/png, image/jpeg, image/jpg"
                                        onchange="viewImage(event, 1)">
                                </div>

                                <!-- Image Upload Box 2 -->
                                <div class="image-upload-box">
                                    <div class="preview-container">
                                        <img src="" alt="" id="imgView2" class="img-preview">
                                    </div>
                                    <input class="form-control" type="file" name="images" id="input2"
                                        accept="image/png, image/jpeg, image/jpg"
                                        onchange="viewImage(event, 2)">
                                </div>

                                <!-- Image Upload Box 3 -->
                                <div class="image-upload-box">
                                    <div class="preview-container">
                                        <img src="" alt="" id="imgView3" class="img-preview">
                                    </div>
                                    <input class="form-control" type="file" name="images" id="input3"
                                        accept="image/png, image/jpeg, image/jpg"
                                        onchange="viewImage(event, 3)">
                                </div>
                            </div>

                            <div id="thumbnailsContainer" class="thumbnails-container">
                                <h5>Selected Images</h5>
                            </div>
                        </div>
                    </div>

                    <div>
                        <button class="btn btn-success" type="submit">Publish Product</button>
                    </div>
                </form>
            </div>
        </div>
    </section>
</div>

<script>
let variantCounter = 1;

// Variant functions
function addVariant() {
    const variantContainer = document.getElementById('variant-container').getElementsByClassName('card-body')[0];
    const variants = variantContainer.getElementsByClassName('variant');
    const newIndex = variants.length;

    const newVariant = document.createElement('div');
    newVariant.className = 'variant mb-4';
    newVariant.innerHTML = `
        <label for="size" class="form-label">Size:</label>
        <input type="number" name="variants[${newIndex}][size]" class="form-control border" required>
        <div class="error-message"></div>

        <label for="quantity" class="form-label">Quantity:</label>
        <input type="number" name="variants[${newIndex}][quantity]" class="form-control border" value="1" required>
        <div class="error-message"></div>

        <button type="button" class="btn btn-danger mt-2" onclick="removeVariant(this)">Remove Variant</button>
    `;

    variantContainer.appendChild(newVariant);
}

function removeVariant(button) {
    const variant = button.closest('.variant');
    const variantContainer = variant.parentElement;
    variant.remove();

    const variants = variantContainer.getElementsByClassName('variant');
    Array.from(variants).forEach((v, index) => {
        v.querySelectorAll('input').forEach(input => {
            const name = input.getAttribute('name');
            if (name) {
                input.setAttribute('name', name.replace(/variants\[\d+\]/, `variants[${index}]`));
            }
        });
    });
}

// Image handling
function viewImage(event, index) {
    const input = event.target;
    const file = input.files[0];
    if (!file) return;

    const reader = new FileReader();
    const imgView = document.getElementById(`imgView${index}`);

    reader.onload = function(e) {
        const imageUrl = e.target.result;
        imgView.src = imageUrl;
        updateThumbnail(imageUrl, index);
    };

    reader.readAsDataURL(file);
}

function updateThumbnail(imageUrl, index) {
    const thumbnailsContainer = document.getElementById('thumbnailsContainer');
    const existingThumbnail = document.querySelector(`.thumbnail[data-index="${index}"]`);
    
    if (existingThumbnail) {
        existingThumbnail.remove();
    }
    
    const thumbnail = document.createElement('div');
    thumbnail.className = 'thumbnail';
    thumbnail.dataset.index = index;
    
    thumbnail.innerHTML = `
        <img src="${imageUrl}" alt="Product Image ${index}">
        <span class="remove-icon" onclick="removeThumbnail(${index})">×</span>
    `;
    
    thumbnailsContainer.appendChild(thumbnail);
}

function removeThumbnail(index) {
    const thumbnail = document.querySelector(`.thumbnail[data-index="${index}"]`);
    if (thumbnail) {
        thumbnail.remove();
    }
    
    const input = document.getElementById(`input${index}`);
    const imgView = document.getElementById(`imgView${index}`);
    input.value = '';
    imgView.src = '';
}

// Form validation
function validateForm() {
    clearErrorMessages();
    let isValid = true;

    const productName = document.getElementsByName("productName")[0].value;
    if (productName.trim() === "") {
        displayErrorMessage("productName-error", "Please enter a product name");
        isValid = false;
    }

    const description = document.getElementById("descriptionid").value;
    if (description.trim() === "") {
        displayErrorMessage("description-error", "Please enter a product description");
        isValid = false;
    }

    const regularPrice = document.getElementsByName("regularPrice")[0].value;
    const salePrice = document.getElementsByName("salePrice")[0].value;

    if (!/^\d+(\.\d{1,2})?$/.test(regularPrice) || parseFloat(regularPrice) <= 0) {
        displayErrorMessage("regularPrice-error", "Please enter a valid regular price");
        isValid = false;
    }

    if (salePrice && !/^\d+(\.\d{1,2})?$/.test(salePrice)) {
        displayErrorMessage("salePrice-error", "Please enter a valid sale price");
        isValid = false;
    }

    if (salePrice && parseFloat(salePrice) >= parseFloat(regularPrice)) {
        displayErrorMessage("salePrice-error", "Sale price must be less than regular price");
        isValid = false;
    }

    const thumbnails = document.querySelectorAll('.thumbnail');
    if (thumbnails.length === 0) {
        alert("Please upload at least one product image");
        isValid = false;
    }

    return isValid;
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName("error-message");
    Array.from(errorElements).forEach((element) => {
        element.textContent = "";
        element.style.display = "none";
    });
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.textContent = message;
        errorElement.style.display = "block";
    }
}
</script>

<%- include("../../views/partials/admin/footer") %>