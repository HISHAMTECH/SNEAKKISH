<%- include("../../views/partials/admin/header") %>

<title>Edit Coupon</title>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap" rel="stylesheet">
<style>
    body {
        font-family: 'Poppins', sans-serif;
        background: url('/images/SHOES/background.jpg') no-repeat center center fixed;
        background-size: cover;
        color: #fff;
        margin: 0;
        padding: 0;
        display: flex;
    }

    .content-container {
        margin-left: 270px;
        width: calc(100% - 270px);
        min-height: 100vh;
        background: rgba(0, 0, 0, 0.5);
    }

    .content-header {
        text-align: center;
        padding: 20px;
    }

    .content-header h2 {
        margin: 0;
        color: white;
        font-size: 24px;
    }

    .main-content {
        margin-left: 30px;
        padding: 30px;
    }

    .form-container {
        background: rgba(0, 0, 0, 0.8);
        border-radius: 8px;
        padding: 30px;
        margin-bottom: 30px;
    }

    .form-group {
        margin-bottom: 25px;
    }

    .form-label {
        display: block;
        color: white;
        margin-bottom: 10px;
        font-size: 16px;
    }

    .form-control {
        width: 100%;
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background: white;
        color: #333;
        margin-bottom: 15px;
    }

    .btn-save-changes {
        width: 100%;
        padding: 12px;
        background: #28a745;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: bold;
        transition: 0.3s;
    }

    .btn-save-changes:hover {
        background: #218838;
    }
</style>
</head>
<body>
    <div class="content-container">
        <div class="content-header">
            <h2>EDIT COUPON</h2>
        </div>

        <div class="main-content">
            <div class="form-container">
                <form id="editCouponForm" method="post" action="/admin/updateCoupon">
                    <input type="hidden" name="couponId" value="<%= coupon._id %>">
                    <div class="form-group">
                        <label class="form-label">Coupon Code</label>
                        <input type="text" name="couponCode" id="couponCode" value="<%= coupon.Name %>" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="form-label">Discount (%)</label>
                        <input type="number" name="discount" id="couponDiscount" value="<%= coupon.OfferPrice %>" class="form-control" min="1" max="100" />
                    </div>
                    <div class="form-group">
                        <label class="form-label">Minimum Price</label>
                        <input type="text" name="minPrice" id="minPrice" value="<%= coupon.MinimumPrice %>" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="form-label">Start Date</label>
                        <input type="date" name="startDate" id="couponStartDate" value="<%= new Date(coupon.CreatedOn).toISOString().split('T')[0] %>" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="form-label">Expiry Date</label>
                        <input type="date" name="expiryDate" id="couponExpiryDate" value="<%= new Date(coupon.ExpiryOn).toISOString().split('T')[0] %>" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="form-label">Status</label>
                        <select name="status" id="couponStatus" class="form-control">
                            <option value="true" <%= coupon.isListed ? 'selected' : '' %>>Active</option>
                            <option value="false" <%= !coupon.isListed ? 'selected' : '' %>>Inactive</option>
                        </select>
                    </div>
                    <button type="submit" class="btn-save-changes">Save Changes</button>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.getElementById("editCouponForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const couponCode = document.getElementById("couponCode").value.trim();
            const discount = document.getElementById("couponDiscount").value;
            const minPrice = document.getElementById("minPrice").value.trim();
            const startDate = document.getElementById("couponStartDate").value;
            const expiryDate = document.getElementById("couponExpiryDate").value;

            let errors = [];

            if (!couponCode) errors.push("Coupon code is required");
            else if (!/^[A-Z0-9]{4,10}$/.test(couponCode)) errors.push("Coupon code must be 4-10 characters long and contain only uppercase letters and numbers");

            if (!discount) errors.push("Discount percentage is required");
            else if (isNaN(parseFloat(discount)) || parseFloat(discount) <= 0 || parseFloat(discount) > 100) errors.push("Discount must be a number between 1 and 100");

            if (!minPrice) errors.push("Minimum price is required");
            else if (isNaN(parseFloat(minPrice)) || parseFloat(minPrice) < 100) errors.push("Minimum price must be at least 100");

            const today = new Date();
            today.setHours(0, 0, 0, 0);

            if (!startDate) errors.push("Start date is required");
            else if (new Date(startDate) < today) errors.push("Start date cannot be in the past");

            if (!expiryDate) errors.push("Expiry date is required");
            else if (new Date(expiryDate) < today) errors.push("Expiry date cannot be in the past");
            else if (startDate && new Date(expiryDate) <= new Date(startDate)) errors.push("Expiry date must be after start date");

            if (errors.length > 0) {
                Swal.fire({
                    icon: "warning",
                    title: "Validation Errors",
                    html: errors.map(error => `â€¢ ${error}`).join("<br>"),
                    confirmButtonColor: "#28a745"
                });
                return;
            }

            // Create FormData from the form
            const formData = new FormData(this);

            // Log the FormData entries for debugging
            console.log("Form data being sent:");
            for (let pair of formData.entries()) {
                console.log(pair[0] + ': ' + pair[1]);
            }

            try {
                Swal.fire({
                    title: "Saving Changes",
                    text: "Please wait...",
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                    }
                });

                // Send as urlencoded form data instead of FormData
                const formObject = {};
                formData.forEach((value, key) => {
                    formObject[key] = value;
                });

                const response = await fetch('/admin/updateCoupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formObject)
                });

                if (response.ok) {
                    Swal.fire({
                        icon: "success",
                        title: "Success!",
                        text: "Coupon has been updated successfully.",
                        confirmButtonColor: "#28a745"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/admin/coupon';
                        }
                    });
                } else {
                    const error = await response.json();
                    throw new Error(error.message || 'Server error');
                }
            } catch (error) {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: error.message || "Something went wrong while updating the coupon.",
                    confirmButtonColor: "#28a745"
                });
            }
        });
    </script>

<%- include("../../views/partials/admin/footer") %>