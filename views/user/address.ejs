<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Address</title>
  <style>
    /* Global styles and reset */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background-color: #f7f8fa;
      color: #2d3748;
      line-height: 1.6;
    }

    /* Main container styles */
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 40px 20px;
    }

    /* Breadcrumb styles */
    .breadcrumb {
      margin-bottom: 30px;
      font-size: 13px;
      color: #718096;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .breadcrumb a {
      color: #718096;
      text-decoration: none;
      transition: color 0.3s ease;
    }

    .breadcrumb a:hover {
      color: #2b6cb0;
    }

    /* Account header styles */
    .account-header {
      margin-bottom: 40px;
      border-bottom: 1px solid #e2e8f0;
      padding-bottom: 20px;
    }

    .account-header h1 {
      font-size: 32px;
      color: #1a202c;
      font-weight: 700;
      letter-spacing: -0.5px;
    }

    /* Sidebar toggle button (visible only on mobile) */
    .sidebar-toggle {
      display: none;
      width: 100%;
      padding: 12px;
      background-color: #2b6cb0;
      color: white;
      border: none;
      border-radius: 6px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      text-align: center;
      margin-bottom: 20px;
      transition: background-color 0.3s ease;
    }

    .sidebar-toggle:hover {
      background-color: #2c5282;
    }

    /* Main content layout */
    .content-wrapper {
      display: flex;
      gap: 50px;
    }

    /* Sidebar styles */
    .sidebar {
      width: 280px;
      flex-shrink: 0;
      transition: all 0.3s ease;
    }

    .sidebar-section {
      margin-bottom: 40px;
      background-color: white;
      border-radius: 12px;
      padding: 25px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.03);
      border: 1px solid #edf2f7;
    }

    .sidebar-title {
      color: #2d3748;
      margin-bottom: 20px;
      font-size: 14px;
      font-weight: 700;
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    .sidebar-menu {
      list-style: none;
    }

    .sidebar-menu li {
      margin-bottom: 10px;
    }

    .sidebar-menu li strong {
      color: #718096;
      font-size: 13px;
      display: block;
      margin: 10px 0;
      font-weight: 600;
      text-transform: uppercase;
    }

    .sidebar-menu a {
      color: #4a5568;
      text-decoration: none;
      display: block;
      padding: 10px 12px;
      border-radius: 6px;
      transition: all 0.3s ease;
      font-size: 15px;
      font-weight: 500;
    }

    .sidebar-menu a:hover {
      background-color: #edf2f7;
      color: #2b6cb0;
    }

    .sidebar-menu a.active {
      background-color: #e6f0fa;
      color: #2b6cb0;
      font-weight: 600;
    }

    /* Main content area */
    .main-content {
      flex: 1;
    }

    /* Address container styles */
    .address-container {
      background: white;
      padding: 35px;
      border-radius: 12px;
      margin-bottom: 40px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.03);
      border: 1px solid #edf2f7;
    }

    .address-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
      padding-bottom: 20px;
      border-bottom: 1px solid #e2e8f0;
    }

    .address-header h2 {
      font-size: 26px;
      color: #1a202c;
      font-weight: 600;
    }

    .add-address-btn {
      padding: 10px 20px;
      border: none;
      background-color: #2b6cb0;
      color: white;
      border-radius: 6px;
      font-weight: 600;
      cursor: pointer;
      transition: background-color 0.3s ease;
      text-decoration: none;
      font-size: 14px;
      letter-spacing: 0.5px;
      display: flex;
      align-items: center;
      gap: 6px;
    }

    .add-address-btn:hover {
      background-color: #2c5282;
    }

    .address-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 30px;
    }

    .address-card {
      border: 1px solid #e2e8f0;
      padding: 25px;
      border-radius: 10px;
      background-color: white;
      transition: all 0.3s ease;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.02);
      position: relative;
    }

    .address-card:hover {
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.06);
      transform: translateY(-3px);
      border-color: #2b6cb0;
    }

    .address-type {
      color: #2b6cb0;
      font-weight: 600;
      margin-bottom: 15px;
      font-size: 16px;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .address-type-icon {
      width: 24px;
      height: 24px;
      background-color: #e6f0fa;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #2b6cb0;
    }

    .address-details {
      margin-bottom: 20px;
      color: #4a5568;
      font-size: 15px;
      line-height: 1.6;
    }

    .address-details p {
      margin-bottom: 8px;
    }

    .address-details strong {
      color: #1a202c;
    }

    .address-actions {
      display: flex;
      gap: 15px;
      margin-top: 20px;
    }

    .edit-btn, .delete-btn {
      padding: 8px 16px;
      border-radius: 6px;
      cursor: pointer;
      text-decoration: none;
      font-size: 14px;
      font-weight: 500;
      display: flex;
      align-items: center;
      gap: 5px;
      transition: all 0.3s ease;
    }

    .edit-btn {
      border: 1px solid #e2e8f0;
      background: transparent;
      color: #4a5568;
    }

    .edit-btn:hover {
      background-color: #edf2f7;
      color: #2b6cb0;
      border-color: #2b6cb0;
    }

    .delete-btn {
      border: 1px solid #fecaca;
      background: transparent;
      color: #e53e3e;
    }

    .delete-btn:hover {
      background: #fef2f2;
      border-color: #e53e3e;
      color: #c53030;
    }

    /* Default address badge */
    .default-badge {
      position: absolute;
      top: -10px;
      right: 10px;
      background: #2b6cb0;
      color: white;
      padding: 4px 10px;
      font-size: 12px;
      border-radius: 12px;
      font-weight: 500;
    }

    /* Modal styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1000;
    }

    .modal-content {
      background: white;
      margin: 50px auto;
      padding: 35px;
      width: 600px;
      max-width: 90%;
      border-radius: 12px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.03);
      border: 1px solid #edf2f7;
      max-height: 80vh;
      overflow-y: auto;
    }

    .modal-content h2 {
      font-size: 26px;
      color: #1a202c;
      margin-bottom: 20px;
      padding-bottom: 15px;
      border-bottom: 1px solid #e2e8f0;
      font-weight: 600;
    }

    .form-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-group.full-width {
      grid-column: span 2;
    }

    .form-group label {
      display: block;
      margin-bottom: 8px;
      color: #4a5568;
      font-weight: 500;
      font-size: 14px;
    }

    .form-group input, .form-group select {
      width: 100%;
      padding: 10px 12px;
      border: 1px solid #e2e8f0;
      border-radius: 6px;
      font-size: 15px;
      transition: all 0.3s ease;
    }

    .form-group input:focus, .form-group select:focus {
      outline: none;
      border-color: #2b6cb0;
      box-shadow: 0 0 0 3px rgba(43, 108, 176, 0.2);
    }

    .form-actions {
      display: flex;
      gap: 15px;
      margin-top: 25px;
      justify-content: flex-end;
    }

    .save-btn {
      padding: 10px 20px;
      background: #2b6cb0;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-weight: 600;
      font-size: 14px;
      transition: background-color 0.3s ease;
    }

    .save-btn:hover {
      background: #2c5282;
    }

    .cancel-btn {
      padding: 10px 20px;
      background: #718096;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-weight: 600;
      font-size: 14px;
      transition: background-color 0.3s ease;
    }

    .cancel-btn:hover {
      background: #5a667a;
    }

    /* No addresses message */
    .no-addresses {
      text-align: center;
      padding: 40px 20px;
      background: #edf2f7;
      border-radius: 10px;
      color: #718096;
    }

    .no-addresses p {
      margin-bottom: 20px;
      font-size: 16px;
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .content-wrapper {
        flex-direction: column;
      }

      .sidebar {
        width: 100%;
        margin-bottom: 0; /* Adjusted to avoid extra spacing */
      }

      .sidebar-toggle {
        display: block;
      }

      .sidebar-section {
        display: none; /* Hide by default on mobile */
        margin-bottom: 20px;
      }

      .sidebar-section.active {
        display: block; /* Show when toggled */
      }

      .address-list {
        grid-template-columns: 1fr;
      }

      .form-grid {
        grid-template-columns: 1fr;
      }

      .form-group.full-width {
        grid-column: span 1;
      }

      /* Adjust container padding for smaller screens */
      .container {
        padding: 20px 10px;
      }

      /* Reduce font sizes for better fit */
      .account-header h1 {
        font-size: 24px;
      }

      .address-header h2 {
        font-size: 20px;
      }

      .sidebar-title {
        font-size: 12px;
      }

      .sidebar-menu a {
        font-size: 14px;
        padding: 8px 10px;
      }

      .address-details {
        font-size: 14px;
      }

      .address-type {
        font-size: 14px;
      }

      /* Adjust button sizes */
      .add-address-btn,
      .edit-btn,
      .delete-btn,
      .save-btn,
      .cancel-btn {
        padding: 8px 16px;
        font-size: 13px;
      }

      /* Modal adjustments */
      .modal-content {
        width: 90%;
        padding: 20px;
        margin: 20px auto;
      }

      .modal-content h2 {
        font-size: 20px;
      }

      .form-group input,
      .form-group select {
        font-size: 14px;
        padding: 8px 10px;
      }
    }

    /* Additional refinements for very small screens (e.g., < 480px) */
    @media (max-width: 480px) {
      .container {
        padding: 15px 5px;
      }

      .breadcrumb {
        font-size: 11px;
      }

      .account-header h1 {
        font-size: 20px;
      }

      .address-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
      }

      .address-header h2 {
        font-size: 18px;
      }

      .address-card {
        padding: 15px;
      }

      .address-details p {
        margin-bottom: 6px;
      }

      .address-actions {
        flex-direction: column;
        gap: 10px;
      }

      .add-address-btn,
      .edit-btn,
      .delete-btn {
        width: 100%;
        text-align: center;
      }

      .modal-content {
        padding: 15px;
        margin: 10px auto;
      }

      .form-actions {
        flex-direction: column;
        gap: 10px;
      }

      .save-btn,
      .cancel-btn {
        width: 100%;
      }

      .no-addresses {
        padding: 20px 10px;
      }

      .no-addresses p {
        font-size: 14px;
      }

      .sidebar-toggle {
        padding: 10px;
        font-size: 13px;
      }
    }

    /* Error styling for invalid fields */
    .form-group.error input, .form-group.error select {
      border-color: #e53e3e;
    }

    .form-group .error-message {
      color: #e53e3e;
      font-size: 12px;
      margin-top: 5px;
      display: none;
    }

    .form-group.error .error-message {
      display: block;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Breadcrumb -->
    <div class="breadcrumb">
      <a href="/">Home</a> > <a href="/userProfile">Account</a> > Address
    </div>

    <!-- Account header -->
    <div class="account-header">
      <h1>My Address</h1>
    </div>

    <!-- Main content wrapper -->
    <div class="content-wrapper">
      <!-- Sidebar -->
      <div class="sidebar">
        <button class="sidebar-toggle" onclick="toggleSidebar()">Menu</button>
        <div class="sidebar-section">
          <h2 class="sidebar-title">Overview</h2>
          <ul class="sidebar-menu">
            <li><strong>ACCOUNT</strong></li>
            <li><a href="/userProfile">Profile</a></li>
            <li><a href="/change-password">Change Password</a></li>
            <li><a href="/address" class="active">Address</a></li>
            <li><a href="/wishlist">Wishlist</a></li>
            <li><a href="/coupon">Coupons</a></li>
            <li><a href="/Wallet">Wallet</a></li>
          </ul>
        </div>
        
        <div class="sidebar-section">
          <h2 class="sidebar-title">Orders</h2>
          <ul class="sidebar-menu">
            <li><a href="/orders">Order History</a></li>
          </ul>
        </div>
      </div>

      <!-- Main content -->
      <div class="main-content">
        <div class="address-container">
          <div class="address-header">
            <h2>Saved Addresses</h2>
            <button class="add-address-btn" onclick="openModal('add')">+ Add New Address</button>
          </div>
          <% if (userAddress && userAddress.Address && userAddress.Address.length > 0) { %>
            <div class="address-list" id="addressList">
              <% userAddress.Address.forEach((address) => { %>
                <div class="address-card">
                  <div class="address-type">
                    <span class="address-type-icon">🏠</span>
                    <%= address.addressType %>
                  </div>
                  <div class="address-details">
                    <p><strong>Name:</strong> <%= address.Name %></p>
                    <p><strong>City:</strong> <%= address.City %></p>
                    <p><strong>Landmark:</strong> <%= address.Landmark %></p>
                    <p><strong>State:</strong> <%= address.State %></p>
                    <p><strong>Pincode:</strong> <%= address.Pincode %></p>
                    <p><strong>Phone:</strong> <%= address.Phone %></p>
                    <p><strong>Alternate Phone:</strong> <%= address.AltPhone || 'N/A' %></p>
                  </div>
                  <div class="address-actions">
                    <a href="javascript:void(0)" class="edit-btn" onclick="openEditModal('<%= address._id %>')">✎ Edit</a>
                    <a href="/deleteAddress?id=<%= address._id %>" class="delete-btn" onclick="return confirm('Are you sure?')">🗑️ Delete</a>
                  </div>
                  <% if (address.isDefault) { %>
                    <span class="default-badge">Default</span>
                  <% } %>
                </div>
              <% }) %>
            </div>
          <% } else { %>
            <div class="no-addresses">
              <p>No addresses saved yet.</p>
              <button class="add-address-btn" onclick="openModal('add')">Add Your First Address</button>
            </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Address Modal -->
  <div class="modal" id="addressModal">
    <div class="modal-content">
      <h2 id="modalTitle">Add New Address</h2>
      <form id="addressForm" method="POST" action="/addAddress">
        <div class="form-grid">
          <div class="form-group">
            <label>Address Type</label>
            <select name="addressType" required>
              <option value="Home">Home</option>
              <option value="Work">Work</option>
              <option value="Other">Other</option>
            </select>
            <span class="error-message">Please select an address type</span>
          </div>
          
          <div class="form-group">
            <label>Full Name</label>
            <input type="text" name="Name" placeholder="Enter your full name">
            <span class="error-message">Name must be at least 2 characters</span>
          </div>
          
        <div class="form-group">
            <label>City</label>
            <input type="text" name="City" placeholder="Enter city">
            <span class="error-message">City must be at least 2 characters</span>
          </div>
          
          <div class="form-group">
            <label>Landmark</label>
            <input type="text" name="Landmark" placeholder="Enter nearest landmark">
            <span class="error-message">Landmark is optional</span>
          </div>
          
          <div class="form-group">
            <label>State</label>
            <input type="text" name="State" placeholder="Enter state">
            <span class="error-message">State must be at least 2 characters</span>
          </div>
          
          <div class="form-group">
            <label>Pincode</label>
            <input type="number" name="Pincode" placeholder="Enter pincode">
            <span class="error-message">Pincode must be 6 digits</span>
          </div>
          
          <div class="form-group">
            <label>Phone</label>
            <input type="tel" name="Phone" placeholder="Enter phone number">
            <span class="error-message">Phone must be 10 digits</span>
          </div>
          
          <div class="form-group">
            <label>Alternate Phone</label>
            <input type="tel" name="AltPhone" placeholder="Enter alternate phone">
            <span class="error-message">Alternate phone must be 10 digits if provided</span>
          </div>
          
          
        </div>
        
        <div class="form-actions">
          <button type="button" class="cancel-btn" onclick="closeModal()">Cancel</button>
          <button type="submit" class="save-btn">Save Address</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Edit Address Modal -->
  <div class="modal" id="editAddressModal">
    <div class="modal-content">
      <h2 id="editModalTitle">Edit Address</h2>
      <form id="editAddressForm" method="POST" action="/editAddress">
        <input type="hidden" name="addressId" id="editAddressId">
        <div class="form-grid">
          <div class="form-group">
            <label>Address Type</label>
            <select name="addressType" id="editAddressType" required>
              <option value="Home">Home</option>
              <option value="Work">Work</option>
              <option value="Other">Other</option>
            </select>
            <span class="error-message">Please select an address type</span>
          </div>
          
          <div class="form-group">
            <label>Full Name</label>
            <input type="text" name="Name" id="editName" placeholder="Enter your full name">
            <span class="error-message">Name must be at least 2 characters</span>
          </div>
          
          <div class="form-group">
            <label>City</label>
            <input type="text" name="City" id="editCity" placeholder="Enter city">
            <span class="error-message">City must be at least 2 characters</span>
          </div>
          
          <div class="form-group">
            <label>Landmark</label>
            <input type="text" name="Landmark" id="editLandmark" placeholder="Enter nearest landmark">
            <span class="error-message">Landmark is optional</span>
          </div>
          
          <div class="form-group">
            <label>State</label>
            <input type="text" name="State" id="editState" placeholder="Enter state">
            <span class="error-message">State must be at least 2 characters</span>
          </div>
          
          <div class="form-group">
            <label>Pincode</label>
            <input type="number" name="Pincode" id="editPincode" placeholder="Enter pincode">
            <span class="error-message">Pincode must be 6 digits</span>
          </div>
          
          <div class="form-group">
            <label>Phone</label>
            <input type="tel" name="Phone" id="editPhone" placeholder="Enter phone number">
            <span class="error-message">Phone must be 10 digits</span>
          </div>
          
          <div class="form-group">
            <label>Alternate Phone</label>
            <input type="tel" name="AltPhone" id="editAltPhone" placeholder="Enter alternate phone">
            <span class="error-message">Alternate phone must be 10 digits if provided</span>
          </div>
          
          <div class="form-group full-width">
            <label>
              <input type="checkbox" name="isDefault" id="editIsDefault"> Make this my default address
            </label>
          </div>
        </div>
        
        <div class="form-actions">
          <button type="button" class="cancel-btn" onclick="closeEditModal()">Cancel</button>
          <button type="submit" class="save-btn">Update Address</button>
        </div>
      </form>
    </div>
  </div>

  <!-- JavaScript for modal functionality, validation, and sidebar toggle -->
  <script>
    // Sidebar toggle function
    function toggleSidebar() {
      const sidebarSections = document.querySelectorAll('.sidebar-section');
      const toggleButton = document.querySelector('.sidebar-toggle');
      sidebarSections.forEach(section => section.classList.toggle('active'));
      if (sidebarSections[0].classList.contains('active')) {
        toggleButton.textContent = 'Close Menu';
      } else {
        toggleButton.textContent = 'Menu';
      }
    }

    // Modal functions
    function openModal(mode) {
      const modal = document.getElementById('addressModal');
      const modalTitle = document.getElementById('modalTitle');
      const form = document.getElementById('addressForm');
      
      if (mode === 'add') {
        modalTitle.textContent = 'Add New Address';
        form.reset();
        clearErrors();
      }
      
      modal.style.display = 'block';
    }
    
    function closeModal() {
      const modal = document.getElementById('addressModal');
      modal.style.display = 'none';
      clearErrors();
    }
    
    function openEditModal(addressId) {
      fetch(`/editAddress?id=${addressId}`)
        .then(response => {
          if (!response.ok) throw new Error('Network response was not ok');
          return response.json();
        })
        .then(data => {
          if (data.success) {
            const modal = document.getElementById('editAddressModal');
            const modalTitle = document.getElementById('editModalTitle');
            
            document.getElementById('editAddressId').value = data.address._id;
            document.getElementById('editAddressType').value = data.address.addressType || 'Home';
            document.getElementById('editName').value = data.address.Name || '';
            document.getElementById('editCity').value = data.address.City || '';
            document.getElementById('editLandmark').value = data.address.Landmark || '';
            document.getElementById('editState').value = data.address.State || '';
            document.getElementById('editPincode').value = data.address.Pincode || '';
            document.getElementById('editPhone').value = data.address.Phone || '';
            document.getElementById('editAltPhone').value = data.address.AltPhone || '';
            document.getElementById('editIsDefault').checked = data.address.isDefault || false;

            modalTitle.textContent = 'Edit Address';
            modal.style.display = 'block';
          } else {
            alert(data.message || 'Failed to load address data');
          }
        })
        .catch(error => {
          console.error('Error fetching address data:', error);
          alert('An error occurred while loading the address');
        });
    }

    function closeEditModal() {
      const modal = document.getElementById('editAddressModal');
      modal.style.display = 'none';
      clearEditErrors();
    }

    window.onclick = function(event) {
      const addModal = document.getElementById('addressModal');
      const editModal = document.getElementById('editAddressModal');
      if (event.target === addModal) closeModal();
      else if (event.target === editModal) closeEditModal();
    };

    function clearErrors() {
      document.querySelectorAll('#addressModal .form-group').forEach(group => {
        group.classList.remove('error');
      });
    }

    function clearEditErrors() {
      document.querySelectorAll('#editAddressModal .form-group').forEach(group => {
        group.classList.remove('error');
      });
    }

    function validateForm() {
      let isValid = true;
      clearErrors();

      const name = document.querySelector('#addressForm [name="Name"]').value;
      if (!name || name.length < 2) {
        setError('Name', 'Name must be at least 2 characters');
        isValid = false;
      }

      const city = document.querySelector('#addressForm [name="City"]').value;
      if (!city || city.length < 2) {
        setError('City', 'City must be at least 2 characters');
        isValid = false;
      }

      const state = document.querySelector('#addressForm [name="State"]').value;
      if (!state || state.length < 2) {
        setError('State', 'State must be at least 2 characters');
        isValid = false;
      }

      const pincode = document.querySelector('#addressForm [name="Pincode"]').value;
      if (!pincode || !/^\d{6}$/.test(pincode)) {
        setError('Pincode', 'Pincode must be 6 digits');
        isValid = false;
      }

      const phone = document.querySelector('#addressForm [name="Phone"]').value;
      if (!phone || !/^\d{10}$/.test(phone)) {
        setError('Phone', 'Phone must be 10 digits');
        isValid = false;
      }

      const altPhone = document.querySelector('#addressForm [name="AltPhone"]').value;
      if (altPhone && !/^\d{10}$/.test(altPhone)) {
        setError('AltPhone', 'Alternate phone must be 10 digits if provided');
        isValid = false;
      }

      return isValid;
    }

    function validateEditForm() {
      let isValid = true;
      clearEditErrors();

      const name = document.querySelector('#editAddressForm [name="Name"]').value;
      if (!name || name.length < 2) {
        setEditError('Name', 'Name must be at least 2 characters');
        isValid = false;
      }

      const city = document.querySelector('#editAddressForm [name="City"]').value;
      if (!city || city.length < 2) {
        setEditError('City', 'City must be at least 2 characters');
        isValid = false;
      }

      const state = document.querySelector('#editAddressForm [name="State"]').value;
      if (!state || state.length < 2) {
        setEditError('State', 'State must be at least 2 characters');
        isValid = false;
      }

      const pincode = document.querySelector('#editAddressForm [name="Pincode"]').value;
      if (!pincode || !/^\d{6}$/.test(pincode)) {
        setEditError('Pincode', 'Pincode must be 6 digits');
        isValid = false;
      }

      const phone = document.querySelector('#editAddressForm [name="Phone"]').value;
      if (!phone || !/^\d{10}$/.test(phone)) {
        setEditError('Phone', 'Phone must be 10 digits');
        isValid = false;
      }

      const altPhone = document.querySelector('#editAddressForm [name="AltPhone"]').value;
      if (altPhone && !/^\d{10}$/.test(altPhone)) {
        setEditError('AltPhone', 'Alternate phone must be 10 digits if provided');
        isValid = false;
      }

      return isValid;
    }

    function setError(fieldName, message) {
      const group = document.querySelector(`#addressForm [name="${fieldName}"]`).parentElement;
      group.classList.add('error');
      group.querySelector('.error-message').textContent = message;
    }

    function setEditError(fieldName, message) {
      const group = document.querySelector(`#editAddressForm [name="${fieldName}"]`).parentElement;
      group.classList.add('error');
      group.querySelector('.error-message').textContent = message;
    }

    document.getElementById('addressForm').addEventListener('submit', function(e) {
      if (!validateForm()) {
        e.preventDefault();
        return;
      }
      closeModal();
    });

    document.getElementById('editAddressForm').addEventListener('submit', function(e) {
      if (!validateEditForm()) {
        e.preventDefault();
        return;
      }
      closeEditModal();
    });
  </script>
</body>
</html>