<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Verify OTP</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f5f5;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
        }

        .content-main {
            width: 100%;
            padding: 20px;
        }

        .card-otp {
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 30px;
            max-width: 400px;
            min-width: 300px;
            width: 100%;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card-otp:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        .card-title {
            color: #333;
            font-size: 24px;
            font-weight: 600;
            text-align: center;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 20px;
            text-align: center;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #666;
            font-size: 16px;
            text-align: left;
            width: 100%;
            max-width: 100%;
        }

        .form-control {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 4px;
            font-size: 16px;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
            outline: none;
            text-align: center;
        }

        .form-control:focus {
            border-color: #00c4a7;
            box-shadow: 0 0 0 4px rgba(0, 196, 167, 0.2);
        }

        .form-control.is-invalid {
            border-color: #ef4444;
            box-shadow: 0 0 0 4px rgba(239, 68, 68, 0.2);
        }

        .error-message {
            color: #ef4444;
            font-size: 14px;
            margin-top: 8px;
            text-align: center;
            font-weight: 500;
            display: block;
        }

        .btn-primary {
            width: 100%;
            padding: 12px 16px;
            background-color: #00c4a7;
            border: none;
            border-radius: 4px;
            color: white;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

        .btn-primary:hover {
            background-color: #00a38e;
            transform: translateY(-2px);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

        .resend-btn {
            width: 100%;
            padding: 12px 16px;
            background-color: #ccc;
            border: none;
            border-radius: 4px;
            color: #333;
            font-size: 16px;
            font-weight: 600;
            cursor: not-allowed;
            transition: background-color 0.3s ease;
            margin-top: 10px;
        }

        .resend-btn.active {
            background-color: #00c4a7;
            cursor: pointer;
        }

        .resend-btn.active:hover {
            background-color: #00a38e;
            transform: translateY(-2px);
        }

        .timer {
            text-align: center;
            margin-top: 10px;
            color: #666;
            font-size: 14px;
        }

        @media (max-width: 480px) {
            .card-otp {
                margin: 20px;
                padding: 20px;
                min-width: 250px;
            }

            .card-title {
                font-size: 20px;
            }

            .form-control, .btn-primary, .resend-btn {
                font-size: 14px;
                padding: 10px 12px;
            }
        }
    </style>
</head>
<body>
    <section class="content-main">
        <div class="card-otp" data-email="<%= email %>">
            <div class="card-body">
                <h4 class="card-title">Verify OTP</h4>
                <form method="post" action="/verify-signup-otp" onsubmit="return validateOtpForm(event)">
                    <div class="form-group">
                        <label for="otp">Enter OTP</label>
                        <input class="form-control" name="otp" placeholder="Enter 6-digit OTP" type="text" id="otp" maxlength="6">
                        <div class="error-message" id="otp-error"></div>
                    </div>
                    <div class="form-actions">
                        <button type="submit" class="btn-primary">Verify OTP</button>
                    </div>
                </form>
                <button id="resendOtpBtn" class="resend-btn" disabled>Resend OTP</button>
                <div id="timer" class="timer">Resend available in <span id="timerSeconds">60</span> seconds</div>
            </div>
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let timer;
        let timeLeft = 60; // 1 minute in seconds

        function startTimer() {
            clearInterval(timer); // Clear any existing timer
            timeLeft = 60;
            const timerElement = document.getElementById('timerSeconds');
            const resendBtn = document.getElementById('resendOtpBtn');

            timer = setInterval(() => {
                if (timeLeft > 0) {
                    timeLeft--;
                    timerElement.textContent = timeLeft;
                    resendBtn.disabled = true;
                    resendBtn.classList.remove('active');
                } else {
                    clearInterval(timer);
                    resendBtn.disabled = false;
                    resendBtn.classList.add('active');
                    timerElement.textContent = '0';
                    document.getElementById('timer').textContent = 'Resend available now';
                }
            }, 1000);
        }

        // Start timer when page loads
        window.onload = startTimer;

        async function validateOtpForm(event) {
            event.preventDefault();
            const otpInput = document.getElementById('otp').value.trim();
            const otpError = document.getElementById('otp-error');

            if (otpInput === '' || otpInput.length !== 6 || isNaN(otpInput)) {
                otpError.textContent = 'Please enter a valid 6-digit OTP.';
                document.getElementById('otp').classList.add('is-invalid');
                return false;
            }

            try {
                const response = await fetch('/verify-signup-otp', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: new URLSearchParams({ otp: otpInput })
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP Verified',
                        text: 'Your OTP has been verified successfully!',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.href = '/login';
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'OTP Error',
                        text: data.message || 'Invalid OTP, please try again.',
                        confirmButtonText: 'OK'
                    });
                    document.getElementById('otp').classList.add('is-invalid');
                    otpError.textContent = data.message || 'Invalid OTP, please try again.';
                }
            } catch (error) {
                console.error('Error verifying OTP:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while verifying the OTP. Please try again.',
                    confirmButtonText: 'OK'
                });
            }
            return false;
        }

        document.getElementById('resendOtpBtn').addEventListener('click', async () => {
            if (!document.getElementById('resendOtpBtn').disabled) {
                try {
                    const cardOtp = document.querySelector('.card-otp');
                    const email = cardOtp.getAttribute('data-email'); // Get email from data attribute

                    const response = await fetch('/resend-signup-otp', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                        body: new URLSearchParams({ email: email })
                    });

                    const data = await response.json();

                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'OTP Resent',
                            text: 'A new OTP has been sent to your email.',
                            confirmButtonText: 'OK'
                        });
                        startTimer(); // Restart the timer after resending
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message || 'Failed to resend OTP. Please try again.',
                            confirmButtonText: 'OK'
                        });
                    }
                } catch (error) {
                    console.error('Error resending OTP:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while resending the OTP. Please try again.',
                        confirmButtonText: 'OK'
                    });
                }
            }
        });
    </script>
</body>
</html>