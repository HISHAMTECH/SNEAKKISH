<!DOCTYPE html>
<html lang="zxx">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Sneakkish Template">
    <meta name="keywords" content="Sneakkish, unica, creative, html">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Sneakkish | Order Details - <%= order.OrderId || order._id %></title>

    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">

    <!-- Css Styles -->
    <link rel="stylesheet" href="/css/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="/css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="/css/elegant-icons.css" type="text/css">
    <link rel="stylesheet" href="/css/magnific-popup.css" type="text/css">
    <link rel="stylesheet" href="/css/nice-select.css" type="text/css">
    <link rel="stylesheet" href="/css/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="/css/slicknav.min.css" type="text/css">
    <link rel="stylesheet" href="/css/style.css" type="text/css">

    <!-- SweetAlert2 CDN -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

    <!-- Custom CSS -->
    <style>
        body {
            font-family: 'Nunito Sans', sans-serif;
            background: #f8f9fa;
            color: #2c2c2c;
            margin: 0;
        }

        .order-details-section {
            padding: 50px 0;
        }

        .container {
            max-width: 1200px;
        }

        .breadcrumb-option {
            background: #fff;
            padding: 20px 0;
            margin-bottom: 30px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .breadcrumb__text h4 {
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 5px;
            color: #333;
        }

        .breadcrumb__links a, .breadcrumb__links span {
            font-size: 14px;
            color: #666;
        }

        .breadcrumb__links a:hover {
            color: #007bff;
        }

        .order-details-container {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            padding: 30px;
            max-width: 800px;
            margin: 0 auto;
        }

        .order-details-container h1 {
            font-size: 28px;
            font-weight: 700;
            color: #007bff;
            margin-bottom: 20px;
            text-align: center;
        }

        /* Table Styling for Order Info, Address, Items, and Totals */
        .order-info, .delivery-address, .ordered-items, .totals {
            margin-bottom: 30px;
        }

        .order-info h2, .delivery-address h2, .ordered-items h2, .totals h2 {
            font-size: 22px;
            font-weight: 600;
            color: #333;
            margin-bottom: 15px;
        }

        .order-table, .address-table, .items-table, .totals-table {
            width: 100%;
            border-collapse: collapse;
            background: #fff;
            border: 1px solid #ddd;
            border-radius: 5px;
            overflow: hidden;
        }

        .order-table th, .order-table td,
        .address-table th, .address-table td,
        .items-table th, .items-table td,
        .totals-table th, .totals-table td {
            padding: 12px 15px;
            text-align: left;
            font-size: 16px;
            color: #666;
            border-bottom: 1px solid #eee;
        }

        .order-table th,
        .address-table th,
        .items-table th,
        .totals-table th {
            background: #f1f1f1;
            font-weight: 600;
            color: #333;
        }

        .order-table td strong,
        .address-table td strong,
        .totals-table td strong {
            color: #333;
        }

        .order-table .highlight {
            color: #007bff;
            font-weight: 600;
        }

        .items-table img {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 4px;
        }

        .totals-table .final-amount {
            font-size: 18px;
            font-weight: 700;
            color: #007bff;
        }

        .action-buttons {
            margin-top: 20px;
            text-align: center;
        }

        .action-buttons button {
            padding: 10px 20px;
            margin: 0 10px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background 0.3s;
        }

        .cancel-btn {
            background: #dc3545;
            color: #fff;
        }

        .cancel-btn:hover {
            background: #c82333;
        }

        .return-btn {
            background: #ffc107;
            color: #333;
        }

        .return-btn:hover {
            background: #e0a800;
        }

        .item-return-btn {
            background: #ff851b;
            color: #fff;
            padding: 8px 12px;
            border-radius: 4px;
            font-size: 14px;
            cursor: pointer;
            transition: background 0.3s;
            border: none;
        }

        .item-return-btn:hover {
            background: #e07017;
        }

        .download-btn {
            display: inline-block;
            background: #28a745;
            color: #fff;
            text-decoration: none;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 16px;
            font-weight: 600;
            transition: background 0.3s;
        }

        .download-btn:hover {
            background: #218838;
        }

        /* Override default button styles for the wrapper */
        .action-buttons button:has(.download-btn) {
            padding: 0;
            background: none;
            border: none;
            margin: 0 10px;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
        }

        .modal-content {
            background: #fff;
            margin: 50px auto;
            padding: 20px;
            width: 400px;
            max-width: 90%;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .modal-content h2 {
            font-size: 20px;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
        }

        .form-group textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            resize: vertical;
        }

        .form-actions {
            display: flex;
            justify-content: space-between;
        }

        .form-actions button {
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .save-btn {
            background: #007bff;
            color: #fff;
        }

        .save-btn:hover {
            background: #0056b3;
        }

        .modal-cancel-btn {
            background: #666;
            color: #fff;
        }

        .modal-cancel-btn:hover {
            background: #555;
        }

        /* Responsive Design */
        @media (max-width: 767px) {
            .order-details-container {
                padding: 20px;
                margin: 20px;
            }

            .order-details-container h1 {
                font-size: 24px;
            }

            .order-info h2, .delivery-address h2, .ordered-items h2, .totals h2 {
                font-size: 20px;
            }

            .order-table th, .order-table td,
            .address-table th, .address-table td,
            .items-table th, .items-table td,
            .totals-table th, .totals-table td {
                font-size: 14px;
                padding: 8px 10px;
            }

            .items-table img {
                width: 40px;
                height: 40px;
            }

            /* Stack table rows for smaller screens */
            .items-table, .items-table thead, .items-table tbody, .items-table th, .items-table td, .items-table tr {
                display: block;
            }

            .items-table thead {
                display: none;
            }

            .items-table tr {
                margin-bottom: 15px;
                border-bottom: 1px solid #ddd;
            }

            .items-table td {
                display: flex;
                justify-content: space-between;
                text-align: right;
                padding: 8px;
                border-bottom: none;
            }

            .items-table td:before {
                content: attr(data-label);
                font-weight: 600;
                color: #333;
                text-align: left;
                flex: 1;
            }

            .items-table td img {
                margin: 0 auto;
            }

            .totals, .action-buttons {
                text-align: center;
            }
        }
    </style>
</head>

<body>
    <!-- Breadcrumb Section -->
    <section class="breadcrumb-option">
        <div class="container py-4">
            <div class="row mb-4">
                <div class="col-12">
                    <h2>Order Details</h2>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/">Home</a></li>
                            <li class="breadcrumb-item"><a href="/orders">My Orders</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Order #<%= order.OrderId %></li>
                        </ol>
                    </nav>
                </div>
            </div>
    </section>

    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h4 class="mb-0">Order #<%= order.OrderId %></h4>
                            <p class="text-muted mb-0">Placed on: <%= new Date(order.InvoiceDate).toLocaleDateString() %></p>
                        </div>
                        <div>
                            <% if(order.Status === 'Payment Failed') { %>
                                <span class="badge bg-danger px-3 py-2">Payment Failed</span>
                            <% } else if(order.Status === 'Pending') { %>
                                <span class="badge bg-warning px-3 py-2">Pending</span>
                            <% } else if(order.Status === 'Placed') { %>
                                <span class="badge bg-info px-3 py-2">Placed</span>
                            <% } else if(order.Status === 'Shipped') { %>
                                <span class="badge bg-primary px-3 py-2">Shipped</span>
                            <% } else if(order.Status === 'Delivered') { %>
                                <span class="badge bg-success px-3 py-2">Delivered</span>
                            <% } else if(order.Status === 'Cancelled') { %>
                                <span class="badge bg-danger px-3 py-2">Cancelled</span>
                            <% } else if(order.Status === 'Return Requested') { %>
                                <span class="badge bg-secondary px-3 py-2">Return Requested</span>
                            <% } else if(order.Status === 'Returned') { %>
                                <span class="badge bg-dark px-3 py-2">Returned</span>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <% if(order.Status === 'Payment Failed') { %>
    <div class="row mb-4">
        <div class="col-12">
            <div class="alert alert-danger">
                <h5>Payment Failed Information</h5>
                <p>Your payment could not be processed due to: <%= order.PaymentFailureReason %></p>
                <p>You can try ordering these items again from your cart.</p>
            </div>
        </div>
    </div>
    <% } %>

    <!-- Order Items -->
    <div class="row mb-4">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Ordered Items</h5>
                </div>
                <div class="card-body">
                    <% order.OrderedItems.forEach((item, index) => { %>
                        <div class="row mb-3 py-3 border-bottom">
                            <div class="col-md-2">
                                <% if(item.Product && item.Product.ProductImage) { %>
                                    <img src="<%= item.Product.ProductImage[0] %>" class="img-fluid rounded" alt="<%= item.Product.ProductName %>">
                                <% } else { %>
                                    <div class="bg-light rounded p-3 text-center">No Image</div>
                                <% } %>
                            </div>
                            <div class="col-md-6">
                                <h6><%= item.Product ? item.Product.ProductName : 'Product Unavailable' %></h6>
                                <p class="text-muted mb-1">Size: <%= item.Size %></p>
                                <p class="text-muted mb-1">Quantity: <%= item.Quantity %></p>
                                <p class="mb-0">₹<%= item.Price %></p>
                            </div>
                            <div class="col-md-4 text-end">
                                <% if(order.Status === 'Delivered' && item.ReturnStatus === 'None') { %>
                                    <button class="btn btn-sm btn-outline-danger return-item-btn" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#returnItemModal" 
                                            data-index="<%= index %>">
                                        Request Return
                                    </button>
                                <% } else if(item.ReturnStatus !== 'None') { %>
                                    <span class="badge bg-secondary"><%= item.ReturnStatus %></span>
                                    <% if(item.ItemReturnReason) { %>
                                        <small class="d-block mt-1">Reason: <%= item.ItemReturnReason %></small>
                                    <% } %>
                                <% } %>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>

        <!-- Order Summary and Delivery Address -->
        <div class="col-md-4">
            <!-- Order Summary -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Order Summary</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-2">
                        <span>Subtotal:</span>
                        <span>₹<%= order.TotalPrice.toFixed(2) %></span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Tax:</span>
                        <span>₹<%= order.Tax.toFixed(2) %></span>
                    </div>
                    <% if(order.Discount > 0) { %>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Discount:</span>
                            <span>-₹<%= order.Discount.toFixed(2) %></span>
                        </div>
                    <% } %>
                    <% if(order.WalletAmount > 0) { %>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Wallet Amount:</span>
                            <span>-₹<%= order.WalletAmount.toFixed(2) %></span>
                        </div>
                    <% } %>
                    <hr>
                    <div class="d-flex justify-content-between fw-bold">
                        <span>Total:</span>
                        <span>₹<%= order.FinalAmount.toFixed(2) %></span>
                    </div>
                    <div class="mt-3">
                        <span class="text-muted">Payment Method: </span>
                        <span><%= order.PaymentMethod %></span>
                    </div>
                    
                    <% if(order.Status !== 'Payment Failed' && order.Status !== 'Cancelled') { %>
                        <div class="mt-3">
                            <a href="/orders/invoice/<%= order.OrderId %>" class="btn btn-sm btn-outline-primary">
                                <i class="fas fa-download me-1"></i> Download Invoice
                            </a>
                        </div>
                    <% } %>
                </div>
            </div>

            <!-- Delivery Address -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Delivery Address</h5>
                </div>
                <div class="card-body">
                    <p class="mb-1"><%= order.Address.addressType || 'Address' %></p>
                    <% if(order.Address.Name) { %><p class="mb-1"><%= order.Address.Name %></p><% } %>
                    <p class="mb-1"><%= order.Address.City %>, <%= order.Address.State %></p>
                    <p class="mb-0">Pincode: <%= order.Address.Pincode %></p>
                    <% if(order.Address.Phone) { %><p class="mb-0">Phone: <%= order.Address.Phone %></p><% } %>
                </div>
            </div>

            <!-- Order Actions -->
            <% if(order.Status === 'Pending') { %>
                <div class="card mt-4">
                    <div class="card-header">
                        <h5 class="mb-0">Order Actions</h5>
                    </div>
                    <div class="card-body">
                        <button class="btn btn-danger btn-block w-100" data-bs-toggle="modal" data-bs-target="#cancelOrderModal">
                            Cancel Order
                        </button>
                    </div>
                </div>
            <% } else if(order.Status === 'Delivered' && !order.OrderedItems.some(item => item.ReturnStatus !== 'None')) { %>
                <div class="card mt-4">
                    <div class="card-header">
                        <h5 class="mb-0">Order Actions</h5>
                    </div>
                    <div class="card-body">
                        <button class="btn btn-warning btn-block w-100" data-bs-toggle="modal" data-bs-target="#returnOrderModal">
                            Return Order
                        </button>
                    </div>
                </div>
            <% } %>
        </div>
    </div>
</div>

<!-- Cancel Order Modal -->
<div class="modal fade" id="cancelOrderModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cancel Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to cancel this order?</p>
                <div class="form-group">
                    <label for="cancelReason">Reason for cancellation:</label>
                    <select class="form-select" id="cancelReason">
                        <option value="Changed my mind">Changed my mind</option>
                        <option value="Found a better deal">Found a better deal</option>
                        <option value="Ordered by mistake">Ordered by mistake</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" id="confirmCancelOrder">Confirm Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Return Order Modal -->
<div class="modal fade" id="returnOrderModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Return Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to return this entire order?</p>
                <div class="form-group">
                    <label for="returnReason">Reason for return:</label>
                    <select class="form-select" id="returnReason">
                        <option value="Damaged product">Damaged product</option>
                        <option value="Wrong item received">Wrong item received</option>
                        <option value="Quality not as expected">Quality not as expected</option>
                        <option value="Size does not fit">Size does not fit</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-warning" id="confirmReturnOrder">Confirm Return</button>
            </div>
        </div>
    </div>
</div>

<!-- Return Individual Item Modal -->
<div class="modal fade" id="returnItemModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Return Item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Request return for this item?</p>
                <div class="form-group">
                    <label for="itemReturnReason">Reason for return:</label>
                    <select class="form-select" id="itemReturnReason">
                        <option value="Damaged product">Damaged product</option>
                        <option value="Wrong item received">Wrong item received</option>
                        <option value="Quality not as expected">Quality not as expected</option>
                        <option value="Size does not fit">Size does not fit</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <input type="hidden" id="returnItemIndex" value="">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-warning" id="confirmReturnItem">Confirm Return</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Cancel Order
        document.getElementById('confirmCancelOrder')?.addEventListener('click', function() {
            const reason = document.getElementById('cancelReason').value;
            
            fetch('/orders/cancel/<%= order.OrderId %>', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ reason }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Order cancelled successfully');
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while cancelling the order');
            });
        });

        // Return Order
        document.getElementById('confirmReturnOrder')?.addEventListener('click', function() {
            const reason = document.getElementById('returnReason').value;
            
            fetch('/orders/return/<%= order.OrderId %>', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ reason }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Return request submitted successfully');
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while submitting return request');
            });
        });

        // Return Individual Item
        document.querySelectorAll('.return-item-btn')?.forEach(button => {
            button.addEventListener('click', function() {
                document.getElementById('returnItemIndex').value = this.getAttribute('data-index');
            });
        });

        document.getElementById('confirmReturnItem')?.addEventListener('click', function() {
            const itemIndex = document.getElementById('returnItemIndex').value;
            const reason = document.getElementById('itemReturnReason').value;
            
            fetch('/orders/return-item/<%= order.OrderId %>', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ itemIndex, reason }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Item return request submitted successfully');
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while submitting item return request');
            });
        });
    });
</script>
</body>
</html>